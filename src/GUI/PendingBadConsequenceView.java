/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.BadConsequence;
import NapakalakiGame.NumericBadConsequence;
import NapakalakiGame.SpecificBadConsequence;

/**
 *
 * @author xehartnort
 */
public class PendingBadConsequenceView extends javax.swing.JPanel {
    private BadConsequence badConsequenceModel;
    /**
     * Creates new form PendingBadConsequenceView
     */
    public PendingBadConsequenceView() {
        initComponents();
    }
    public void setPendingBadConsequence(BadConsequence bc){
        this.badConsequenceModel = bc;
        this.badc.setBadConsequence(bc);
        boolean ocultos = false;
        boolean visibles = false;
        if(badConsequenceModel instanceof NumericBadConsequence){
            if( ((NumericBadConsequence)badConsequenceModel).getNVisibleTreasures() != 0){
                visibles=true;
            }
            if( ((NumericBadConsequence)badConsequenceModel).getNHiddenTreasures() != 0){
                ocultos=true;
            }
        }else{
            if(badConsequenceModel instanceof SpecificBadConsequence){
                if ( !((SpecificBadConsequence)badConsequenceModel).getSpecificVisibleTreasures().isEmpty() ){
                    visibles=true;
                }
                if ( !((SpecificBadConsequence)badConsequenceModel).getSpecificHiddenTreasures().isEmpty() ){
                    ocultos=true;
                }
                
            }else{
                visibles=true;
                ocultos=true;
            }
        }
        badc.enableHiddenTreasures(ocultos);
        badc.enableVisibleTreasures(visibles);
        this.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        badc = new GUI.BadConsequenceView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(badc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(badc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.BadConsequenceView badc;
    // End of variables declaration//GEN-END:variables
}
